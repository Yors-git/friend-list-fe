{"version":3,"sources":["components/Friends.js","components/NewFriend.js","components/EditFriend.js","App.js","reportWebVitals.js","index.js"],"names":["Friends","props","useState","isLoading","setIsLoading","friendsData","setFriendsData","search","setSearch","getFriendId","newFriend","httpAddress","useEffect","getFriends","toggleRequest","a","axios","get","response","data","friends","changeFav","friend","favorite","marital","name","lastName","gender","phone1","phoneType1","phone2","phoneType2","phone3","phoneType3","config","method","url","id","headers","then","newFriendsList","find","el","Col","sm","className","Row","icon","fasPlus","size","onClick","Container","Form","Group","controlId","Control","type","placeholder","autoComplete","onChange","e","keyword","target","value","searchSpace","ListGroup","variant","result","filteredFriends","filter","toLowerCase","includes","map","Item","Badge","fasStar","faPen","farStar","items","NewFriend","useForm","register","handleSubmit","toggleFriends","watch","errors","onSubmit","console","log","JSON","stringify","catch","error","fields","setFields","fieldCount","setFieldCount","addField","toAdd","phoneType","phone","newFields","removeField","pop","Check","inline","label","ref","as","custom","form","fasMinus","showNumberFields","md","span","offset","Button","EditFriend","friendData","setFriendData","friendId","onValueChange","evt","checked","App","afterRequest","setAfterRequest","setFriendId","fluid","passedfriendId","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d075fcd6.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport Badge from 'react-bootstrap/Badge';\nimport Form from 'react-bootstrap/Form';\nimport Container from 'react-bootstrap/Container';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faStar as fasStar } from '@fortawesome/free-solid-svg-icons';\nimport { faStar as farStar } from '@fortawesome/free-regular-svg-icons';\nimport { faPen } from '@fortawesome/free-solid-svg-icons';\nimport { faPlus as fasPlus } from '@fortawesome/free-solid-svg-icons';\n\nexport default function Friends(props) {\n  const [ isLoading, setIsLoading ] = useState(true)\n  const [ friendsData, setFriendsData ] = useState()\n  const [ search, setSearch ] = useState(null)\n\n  const getFriendId = props.getFriendId\n  const newFriend = props.newFriend\n  const httpAddress = 'http://friendlistback-env.eba-dpw2ityc.us-east-2.elasticbeanstalk.com/'\n\n  useEffect(() => {\n    getFriends()\n    \n  }, [props.toggleRequest])\n\n  const getFriends = async () => {\n    const response = await axios.get(httpAddress);\n    setFriendsData(response.data.friends);\n    setIsLoading(false);\n  }\n\n  const changeFav = async (friend) => {\n    var data = {\n      \"favorite\":!friend.favorite,\n      \"marital\":friend.marital,\n      \"name\":friend.name,\n      \"lastName\":friend.lastName,\n      \"gender\":friend.gender,\n      \"phone1\":friend.phone1,\n      \"phoneType1\":friend.phoneType1,\n      \"phone2\":friend.phone2,\n      \"phoneType2\":friend.phoneType2,\n      \"phone3\":friend.phone3,\n      \"phoneType3\":friend.phoneType3,\n    };\n    var config = {\n      method: 'patch',\n      url: `${httpAddress}/${friend.id}`,\n      headers: { \n        'Content-Type': 'application/json'\n      },\n      data: data\n    };\n    \n    await axios(config)\n    .then(function (response) {\n      let newFriendsList = [...friendsData]\n      let elementToChange = newFriendsList.find(el=>el===friend)\n      elementToChange.favorite = response.data.friend.favorite\n      setFriendsData(newFriendsList)\n    })\n  }\n\n  const searchSpace = (e) => {\n    let keyword = e.target.value;\n    setSearch(keyword)\n  }\n  \n  const items = (friendsData) => {\n    let filteredFriends = [];\n    let result\n    friendsData.filter((data)=>{\n      if(search === null) {\n        filteredFriends = [...filteredFriends, data]\n        result =  filteredFriends.map(friend=>(\n        <ListGroup.Item key={friend.id}>\n          {friend.name} {friend.lastName} {` `} \n          {friend.favorite ? \n          <>\n          <Badge variant=\"light\" onClick={()=>changeFav(friend)}><FontAwesomeIcon icon={fasStar} size=\"lg\"/></Badge>\n          <FontAwesomeIcon className=\"mx-1\" icon={faPen} size=\"sm\" onClick={()=>getFriendId(friend.id)}/> </> :\n          <> \n          <Badge variant=\"light\" onClick={()=>changeFav(friend)}><FontAwesomeIcon icon={farStar} size=\"lg\"/></Badge>\n          <FontAwesomeIcon className=\"mx-1\" icon={faPen} size=\"sm\" onClick={()=>getFriendId(friend.id)}/> </>\n          }\n        </ListGroup.Item>\n      ))\n      }\n      else if(data.name.toLowerCase().includes(search.toLowerCase()) || data.lastName.toLowerCase().includes(search.toLowerCase())){\n        filteredFriends = [...filteredFriends, data]\n        result = filteredFriends.map(friend=>(\n        <ListGroup.Item key={friend.id}>\n          {friend.name} {friend.lastName} {` `} \n          {friend.favorite ? \n          <>\n          <Badge variant=\"light\" onClick={()=>changeFav(friend)}><FontAwesomeIcon icon={fasStar} size=\"lg\"/></Badge>\n          <FontAwesomeIcon className=\"mx-1\" icon={faPen} size=\"sm\" onClick={()=>getFriendId(friend.id)}/> </> :\n          <> \n          <Badge variant=\"light\" onClick={()=>changeFav(friend)}><FontAwesomeIcon icon={farStar} size=\"lg\"/></Badge>\n          <FontAwesomeIcon className=\"mx-1\" icon={faPen} size=\"sm\" onClick={()=>getFriendId(friend.id)}/> </>\n          }\n        </ListGroup.Item>\n      ))\n      }\n    })\n    return result\n  }\n\n  if (isLoading) {\n    return <div>Loading...</div>\n  }\n\n  return (\n    <Col sm={3} className=\"search-col py-4\">\n      <Row className=\"justify-content-between\">\n      <h4 className=\"px-3\">Friends:</h4>\n      <FontAwesomeIcon className=\"mx-3\" icon={fasPlus} size=\"2x\" onClick={()=>{newFriend()}}/>\n      </Row>\n      <Container>\n        <Form>\n          <Form.Group controlId=\"formBasicEmail\">\n            <Form.Control type=\"text\" placeholder=\"Search\" autoComplete=\"off\" onChange={(e)=>searchSpace(e)}/>\n          </Form.Group>\n        </Form>\n      </Container>\n      <ListGroup variant=\"flush\">\n        {items(friendsData)}\n      </ListGroup>\n    </Col>\n  )\n}\n","import React, { useEffect, useState } from 'react';\nimport { useForm } from \"react-hook-form\";\nimport axios from 'axios';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus as fasPlus } from '@fortawesome/free-solid-svg-icons';\nimport { faMinus as fasMinus } from '@fortawesome/free-solid-svg-icons';\n\n\nexport default function NewFriend(props) {\n  const { register, handleSubmit, watch, errors } = useForm();\n  const toggleFriends = props.toggleFriends\n  const httpAddress = 'http://friendlistback-env.eba-dpw2ityc.us-east-2.elasticbeanstalk.com/'\n  const onSubmit = async data => {\n    var data = {\n      \"favorite\":data.favorite,\n      \"marital\":data.marital,\n      \"name\":data.name,\n      \"lastName\":data.lastName,\n      \"gender\":data.gender,\n      \"phone1\":data.phone1,\n      \"phoneType1\":data.phoneType1,\n      \"phone2\":data.phone2,\n      \"phoneType2\":data.phoneType2,\n      \"phone3\":data.phone3,\n      \"phoneType3\":data.phoneType3,\n    };\n    var config = {\n      method: 'post',\n      url: `${httpAddress}`,\n      headers: { \n        'Content-Type': 'application/json'\n      },\n      data: data\n    };\n    \n    await axios(config)\n    .then(function (response) {\n      console.log(JSON.stringify(response.data));\n      toggleFriends()\n    })\n    .catch(function (error) {\n      console.log(error);\n    });\n  }\n\n  const Fields = (id, phoneType, phone) => { return { id: id, phoneType: phoneType, phone: phone } }\n\n  const [ fields, setFields ] = useState([])\n  const [ fieldCount, setFieldCount ] = useState(2)\n\n  const addField = () => {\n    if(fieldCount < 4){\n    let toAdd = Fields(fieldCount, `phoneType${fieldCount}`, `phone${fieldCount}`)\n    let newFields = [...fields, toAdd]\n    setFields(newFields)\n    setFieldCount(fieldCount+1)\n  }}\n\n  const removeField = () => {\n    let newFields = fields\n    newFields.pop()\n    setFields(newFields)\n    setFieldCount(fieldCount-1)\n  }\n\n  const showNumberFields = (fields) => {\n    if(fields){\n    return fields.map(form=>(\n      <Form.Row key={form.id} className=\"px-3 pt-3 mt-1 search-col\">\n        <Col sm={4} className=\"py-2\" >\n          <Form.Group controlId=\"exampleForm.SelectCustomSizeSm\">\n            <Form.Control as=\"select\" size=\"md\" custom name={form.phoneType} ref={register}>\n              <option>Mobile</option>\n              <option>Home</option>\n              <option>Job</option>\n            </Form.Control>\n          </Form.Group>\n        </Col>\n        <Col sm={6} className=\"py-2\">\n          <Form.Group>\n          <Form.Control placeholder=\"Number\" name={form.phone} ref={register}/>\n          </Form.Group>\n        </Col>\n        <Col sm={2} className=\"py-2\">\n          {(form.id < 3) &&\n            <FontAwesomeIcon className=\"mx-3\" icon={fasPlus} size=\"2x\" onClick={()=>addField()}/>\n          }\n          <FontAwesomeIcon className=\"mx-3\" icon={fasMinus} size=\"2x\" onClick={()=>removeField()}/>\n        </Col>\n      </Form.Row>\n    ))\n    }\n  }\n\n  return (\n    <Col sm={9} className=\"py-4\">\n      <Form onSubmit={handleSubmit(onSubmit)}>\n        <Form.Row className=\"justify-content-between\">\n        <h4 className=\"px-3\">Create Friend</h4>\n        <div key={`custom-checkbox`} className=\"mb-3\">\n          <Form.Check inline label=\"Favorite\" type=\"checkbox\" id=\"inline-radio-1\" value=\"true\" name=\"favorite\" ref={register}/>\n        </div>\n        </Form.Row>\n        <Form.Row>\n          <Col sm={6} className=\"px-5\">\n            <Form.Control className=\"mb-2\" placeholder=\"First name\" name=\"name\" ref={register}/>\n            <h5 className=\"py-3 mb-0\">Gender</h5>\n            <div key={`custom-inline-radio`} className=\"mb-3\">\n              <Form.Check inline label=\"Male\" type=\"radio\" name=\"gender\" id=\"inline-radio-1\" value=\"male\" ref={register}/>\n              <Form.Check inline label=\"Female\" type=\"radio\" name=\"gender\" id=\"inline-radio-2\" value=\"female\" ref={register}/>\n            </div>\n          </Col>\n          <Col sm={6} className=\"px-5\">\n            <Form.Control placeholder=\"Last name\" name=\"lastName\" ref={register}/>\n            <h5 className=\"py-3 mb-0\">Marital Status</h5>\n            <div className=\"mb-3\">\n              <Form.Check inline label=\"Married\" type=\"radio\" name=\"marital\" id={`inline-radio-1`} value={true} ref={register}/>\n              <Form.Check inline label=\"Unmarried\" type=\"radio\" name=\"marital\" id={`inline-radio-2`} value={false} ref={register}/> \n            </div>\n          </Col>\n        </Form.Row>\n\n        <Form.Row className=\"px-3 pt-3 search-col\">\n          <Col sm={4} className=\"py-2\" >\n            <Form.Group controlId=\"exampleForm.SelectCustomSizeSm\">\n              <Form.Control as=\"select\" size=\"md\" custom name=\"phoneType1\" ref={register}>\n                <option>Mobile</option>\n                <option>Home</option>\n                <option>Job</option>\n              </Form.Control>\n            </Form.Group>\n          </Col>\n          <Col sm={6} className=\"py-2\">\n            <Form.Group>\n            <Form.Control placeholder=\"Number\" name=\"phone1\" ref={register}/>\n            </Form.Group>\n          </Col>\n          <Col sm={2} className=\"py-2\">\n            <FontAwesomeIcon className=\"mx-3\" icon={fasPlus} size=\"2x\" onClick={()=>addField()}/>\n          </Col>\n        </Form.Row>\n        {showNumberFields(fields)}\n\n        <Col className=\"py-3\" md={{ span: 6, offset: 10 }}>\n          <Button className=\"py-2\" variant=\"primary\" type=\"submit\">\n            Create\n          </Button>\n        </Col>\n      </Form>\n    </Col>\n  )\n}\n","import React, { useEffect, useState } from 'react';\nimport { useForm } from \"react-hook-form\";\nimport axios from 'axios';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus as fasPlus } from '@fortawesome/free-solid-svg-icons';\nimport { faMinus as fasMinus } from '@fortawesome/free-solid-svg-icons';\n\n\nexport default function EditFriend(props) {\n  const { register, handleSubmit, watch, errors } = useForm();\n  const [ isLoading, setIsLoading ] = useState(true);\n  const [ friendData, setFriendData ] = useState();\n  const toggleFriends = props.toggleFriends\n  const newFriend = props.newFriend\n\n  useEffect(() => {\n    getFriends()\n    \n  }, [props.friendId])\n\n  //Get fields for selected friend\n  const getFriends = async () => {\n    const response = await axios.get(`http://friendlistback-env.eba-dpw2ityc.us-east-2.elasticbeanstalk.com/${props.friendId}`);\n    setFriendData(response.data.friend);\n    setIsLoading(false);\n  }\n\n  //update fields for selected friend\n  const onValueChange = (evt) => {\n    const value =\n    evt.target.type === \"checkbox\" ? evt.target.checked : evt.target.value;\n    setFriendData({\n      ...friendData,\n      [evt.target.name]: value\n    });\n  }\n\n  //Submit changes\n  const httpAddress = 'http://friendlistback-env.eba-dpw2ityc.us-east-2.elasticbeanstalk.com/'\n\n  const onSubmit = async data => {\n    var data = {\n      \"favorite\":friendData.favorite,\n      \"marital\":friendData.marital,\n      \"name\":friendData.name,\n      \"lastName\":friendData.lastName,\n      \"gender\":friendData.gender,\n      \"phone1\":friendData.phone1,\n      \"phoneType1\":friendData.phoneType1,\n      \"phone2\":friendData.phone2,\n      \"phoneType2\":friendData.phoneType2,\n      \"phone3\":friendData.phone3,\n      \"phoneType3\":friendData.phoneType3,\n    };\n    var config = {\n      method: 'patch',\n      url: `${httpAddress}/${props.friendId}`,\n      headers: { \n        'Content-Type': 'application/json'\n      },\n      data: data\n    };\n    \n    await axios(config)\n    .then(function (response) {\n      console.log(JSON.stringify(response.data));\n      toggleFriends()\n    })\n    .catch(function (error) {\n      console.log(error);\n    });\n  }\n\n\n  if (isLoading) {\n    return <div>Loading...</div>\n  }\n\n  //Main return\n  return (\n    <Col sm={9} className=\"py-4\">\n      <Form onSubmit={handleSubmit(onSubmit)}>\n        <Form.Row className=\"justify-content-between\">\n        <h4 className=\"px-3\">Edit Friend</h4>\n        <div key={`custom-checkbox`} className=\"mb-3\">\n          <Form.Check inline label=\"Favorite\" type=\"checkbox\" id=\"inline-radio-1\" value=\"true\" name=\"favorite\" ref={register} \n          checked={friendData.favorite}\n          onChange={onValueChange}  \n          />\n        </div>\n        </Form.Row>\n        <Form.Row>\n          <Col sm={6} className=\"px-5\">\n            <Form.Control className=\"mb-2\" placeholder=\"First name\" name=\"name\" ref={register} value={friendData.name} onChange={onValueChange} />\n            <h5 className=\"py-3 mb-0\">Gender</h5>\n            <div key={`custom-inline-radio`} className=\"mb-3\" >\n              <Form.Check inline label=\"Male\" type=\"radio\" name=\"gender\" id=\"inline-radio-1\" value=\"male\" ref={register} checked={friendData.gender ==='male'} onChange={onValueChange}/>\n              <Form.Check inline label=\"Female\" type=\"radio\" name=\"gender\" id=\"inline-radio-2\" value=\"female\" ref={register} checked={friendData.gender ==='female'} onChange={onValueChange}/>\n            </div>\n          </Col>\n          <Col sm={6} className=\"px-5\">\n            <Form.Control placeholder=\"Last name\" name=\"lastName\" ref={register} value={friendData.lastName} onChange={onValueChange} />\n            <h5 className=\"py-3 mb-0\">Marital Status</h5>\n            <div className=\"mb-3\" >\n              <Form.Check inline label=\"Married\" type=\"radio\" name=\"marital\" id=\"inline-radio-1\" value={true} ref={register} checked={friendData.marital ===true} onChange={onValueChange}/>\n              <Form.Check inline label=\"Unmarried\" type=\"radio\" name=\"marital\" id=\"inline-radio-2\" value={false} ref={register} checked={friendData.marital ===false} onChange={onValueChange}/>\n            </div>\n          </Col>\n        </Form.Row>\n        <Form.Row className=\"px-3 pt-3 search-col\">\n          <Col sm={4} className=\"py-2\" >\n            <Form.Group controlId=\"exampleForm.SelectCustomSizeSm\">\n              <Form.Control as=\"select\" size=\"md\" custom name=\"phoneType1\" onChange={onValueChange} ref={register} value={friendData.phoneType1}>\n                <option>Mobile</option>\n                <option>Home</option>\n                <option>Job</option>\n              </Form.Control>\n            </Form.Group>\n          </Col>\n          <Col sm={6} className=\"py-2\">\n            <Form.Group>\n            <Form.Control placeholder=\"Number\" name=\"phone1\" onChange={onValueChange} value={friendData.phone1} ref={register}/>\n            </Form.Group>\n          </Col>\n        </Form.Row>\n        {friendData.phone2 &&\n        <Form.Row className=\"px-3 pt-3 search-col\">\n          <Col sm={4} className=\"py-2\" >\n            <Form.Group controlId=\"exampleForm.SelectCustomSizeSm\">\n              <Form.Control as=\"select\" size=\"md\" custom name=\"phoneType2\" onChange={onValueChange} ref={register} value={friendData.phoneType2}>\n                <option>Mobile</option>\n                <option>Home</option>\n                <option>Job</option>\n              </Form.Control>\n            </Form.Group>\n          </Col>\n          <Col sm={6} className=\"py-2\">\n            <Form.Group>\n            <Form.Control placeholder=\"Number\" name=\"phone2\" onChange={onValueChange} value={friendData.phone2} ref={register}/>\n            </Form.Group>\n          </Col>\n        </Form.Row>\n        }\n        {friendData.phone3 &&\n        <Form.Row className=\"px-3 pt-3 search-col\">\n          <Col sm={4} className=\"py-2\" >\n            <Form.Group controlId=\"exampleForm.SelectCustomSizeSm\">\n              <Form.Control as=\"select\" size=\"md\" custom name=\"phoneType3\" onChange={onValueChange} ref={register} value={friendData.phoneType3}>\n                <option>Mobile</option>\n                <option>Home</option>\n                <option>Job</option>\n              </Form.Control>\n            </Form.Group>\n          </Col>\n          <Col sm={6} className=\"py-2\">\n            <Form.Group>\n            <Form.Control placeholder=\"Number\" name=\"phone3\" onChange={onValueChange} value={friendData.phone3} ref={register}/>\n            </Form.Group>\n          </Col>\n        </Form.Row>\n        }\n        <Col className=\"py-3\" md={{ span: 6, offset: 8 }}>\n          <Row>\n          <Button className=\"py-2 mx-2\" variant=\"secondary\" onClick={()=>{newFriend()}}>\n            Cancel\n          </Button>\n          <Button className=\"py-2 mx-2\" variant=\"primary\" type=\"submit\">\n            Update\n          </Button>\n          </Row>\n        </Col>\n      </Form>\n    </Col>\n  )\n}\n","import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\nimport Friends from './components/Friends';\nimport NewFriend from './components/NewFriend';\nimport EditFriend from './components/EditFriend';\n\nfunction App() {\n  const [ afterRequest, setAfterRequest ] = useState(false)\n  const [ friendId, setFriendId ] = useState()\n  const toggleRequest = () => {\n    setAfterRequest(!afterRequest)\n  }\n\n  const getFriendId = (passedfriendId) => {\n    setFriendId(passedfriendId)\n  }\n  \n  const newFriend = () => {\n    setFriendId('')\n  }\n\n  return (\n    <Container fluid>\n      <Row>\n        <Friends toggleRequest={afterRequest} getFriendId={getFriendId} newFriend={newFriend}/>\n        {friendId ? \n          <EditFriend toggleFriends={toggleRequest} friendId={friendId} newFriend={newFriend}/>\n        :\n          <NewFriend toggleFriends={toggleRequest} />\n        }\n      </Row>\n    </Container>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}